modecl:
    MODULE ID { 
        auto res = new st_modecl; 
        res->name = $2; 
        $$ = fetch(res, $1, $2); 
        kick($1); };

import:
    IMPORT { yylex.begin(SC::DEPENDENCY); } import.modules FROM import.package { 
        auto deps = (st_nters*)$3;
        auto res = new st_import;
        res->from = $5;
        for( auto dep : *deps )
            res->modules.push((modesc_t)dep); 
        $$ = fetch(res, $1, $5); 
        kick($1, $4, $5);
        yylex.begin(SC::INITIAL); };

import.package: DQSTR | SQSTR;

import.modules:
    modesc { 
        auto res = new st_nters(); 
        res->push($1); 
        $$ = fetch(res, $1, $1); }
    | import.modules COMMA modesc { 
        auto res = (st_nters*)$1; 
        res->push($3); 
        $$ = fetch(res, $1, $3);
        kick( $2, $3); };

modesc:
    ID { 
        auto res = new st_modesc; 
        res->module = $1; 
        $$ = fetch(res, $1, $1);
        kick($1); }
    | ID AS ID { 
        auto res = new st_modesc;
        res->module = $1; 
        res->alias = $3; 
        $$ = fetch(res, $1, $3); 
        kick($1, $2, $3); };
